# Nginx 프로세스 설정
worker_processes auto;
events { worker_connections 1024; }

http {
    # 업스트림 서버 정의
    upstream gitlab {
        server gitlab:80;      # GitLab 서버
    }

    upstream jenkins {
        server jenkins:8080;   # Jenkins 서버
    }

    upstream harbor {
        server harbor:8080;    # Harbor API 서버
    }

    upstream harbor {
        server harbor-portal:8080;
    }

    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # 보안 헤더 설정
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    server {
        listen 80;
        server_name gitlab.local;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name gitlab.local;

        ssl_certificate /etc/nginx/certs/gitlab.local.crt;
        ssl_certificate_key /etc/nginx/certs/gitlab.local.key;

        location / {
            proxy_pass http://gitlab;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name jenkins.local;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name jenkins.local;

        ssl_certificate /etc/nginx/certs/jenkins.local.crt;
        ssl_certificate_key /etc/nginx/certs/jenkins.local.key;

        location / {
            proxy_pass http://jenkins;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name harbor.local;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name harbor.local;

        ssl_certificate /etc/nginx/certs/harbor.local.crt;
        ssl_certificate_key /etc/nginx/certs/harbor.local.key;

        location / {
            proxy_pass http://harbor;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
