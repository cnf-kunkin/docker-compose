version: '3.8'

services:
  # Nginx 리버스 프록시 서버
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /data/certs:/etc/nginx/certs:ro
      - /data/logs/nginx:/var/log/nginx
    depends_on:
      - grafana
      - prometheus
    networks:
      - monitor-net
    # 보안 설정
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    # 로그 설정
    logging:
      driver: "json-file"
      options:
        max-size: "${NGINX_LOG_MAX_SIZE:-10m}"
        max-file: "${NGINX_LOG_MAX_FILES:-3}"

  # Grafana 대시보드
  grafana:
    image: grafana/grafana:latest
    env_file: ../.env
    volumes:
      - /data/grafana:/var/lib/grafana
      - ../config/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      # 관리자 설정
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-https://grafana.local}
      # 사용자 인증 설정
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP:-false}
      - GF_AUTH_DISABLE_LOGIN_FORM=${GF_AUTH_DISABLE_LOGIN_FORM:-false}
      # SMTP 설정
      - GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      - GF_SMTP_HOST=${GF_SMTP_HOST:-smtp.gmail.com:587}
    networks:
      - monitor-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:/tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus 메트릭 수집기
  prometheus:
    image: prom/prometheus:latest
    env_file: ../.env
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=${PROMETHEUS_STORAGE_PATH:-/prometheus}'
      - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION_TIME:-15d}'
      - '--web.external-url=${PROMETHEUS_WEB_EXTERNAL_URL:-https://prometheus.local}'
    volumes:
      - ../config/prometheus:/etc/prometheus
      - /data/prometheus:/prometheus
    networks:
      - monitor-net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /data/logs/node-exporter:/var/log/node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    networks:
      - monitor-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /data/cadvisor:/var/lib/cadvisor
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge
