# Grafana 서버 설정
server {
    listen 80;
    server_name grafana.local;
    return 301 https://$host$request_uri;  # HTTP to HTTPS 리다이렉션
}

server {
    listen 443 ssl;
    server_name grafana.local;

    # SSL 인증서 설정
    ssl_certificate /etc/nginx/certs/grafana.local.crt;
    ssl_certificate_key /etc/nginx/certs/grafana.local.key;

    # 보안 헤더 설정
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;

    location / {
        # Grafana 프록시 설정
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Prometheus 서버 설정
server {
    listen 80;
    server_name prometheus.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name prometheus.local;

    ssl_certificate /etc/nginx/certs/prometheus.local.crt;
    ssl_certificate_key /etc/nginx/certs/prometheus.local.key;

    location / {
        proxy_pass http://prometheus:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
